<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R Markdown on Mike Quant</title>
    <link>/tags/r-markdown/</link>
    <description>Recent content in R Markdown on Mike Quant</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 25 Jul 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/r-markdown/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Pattern Recognition</title>
      <link>/post/patternrecog/</link>
      <pubDate>Tue, 25 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/patternrecog/</guid>
      <description>R MarkdownWus up.
rm(list=ls())library(quantmod)library(magrittr)library(&amp;#39;dygraphs&amp;#39;)#single equity here. could expand to a list of tickerseqty = &amp;#39;^GSPC&amp;#39;#start date/end date, will update end date to hist dates for backtestingsdate = &amp;#39;2010-01-01&amp;#39;; edate=Sys.Date()#Adj Daily Close Pricedata = getSymbols(eqty,from=sdate,to=edate,auto.assign = F)data = data[,-5]#change names from SPY.Open to Opennames(data)=gsub(paste(eqty,&amp;#39;\\.&amp;#39;,sep=&amp;#39;&amp;#39;),&amp;#39;&amp;#39;,names(data))#daily log return based on Adj Closeret = Ad(data)%&amp;gt;%log%&amp;gt;%diff%&amp;gt;%na.</description>
    </item>
    
    <item>
      <title>Interactive spacial data with Tidycensus and Leaflet</title>
      <link>/post/census/</link>
      <pubDate>Fri, 21 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/census/</guid>
      <description>TitleText
# https://juliasilge.com/blog/using-tidycensus/library(tidycensus)library(leaflet)library(stringr)library(sf)census_api_key(yourAPIhere) #Need to register API https://www.census.gov/data/developers/rent = &amp;#39;B25031_001&amp;#39;hval = &amp;#39;B25077_001&amp;#39;ilb = &amp;#39;C18120_002&amp;#39;ilbu = &amp;#39;C18120_006&amp;#39;inc= &amp;#39;B19013_001&amp;#39;age = &amp;#39;B01002_001&amp;#39;#function to plot census dataleafletcencus = function(censusdat,palette=&amp;#39;viridis&amp;#39;,title=&amp;#39;&amp;#39;,prefix=&amp;#39;&amp;#39;,suffix=&amp;#39;&amp;#39;){pal &amp;lt;- colorNumeric(palette = palette,domain = censusdat$estimate)censusdat %&amp;gt;%st_transform(crs = &amp;quot;+init=epsg:4326&amp;quot;) %&amp;gt;% leaflet(width = &amp;quot;80%&amp;quot;) %&amp;gt;%addProviderTiles(provider = &amp;quot;CartoDB.Positron&amp;quot;) %&amp;gt;%addPolygons(popup = ~ paste(censusdat$estimate),stroke = FALSE, smoothFactor=0, fillOpacity=0.</description>
    </item>
    
    <item>
      <title>dygraph template</title>
      <link>/post/dygraphtemplates/</link>
      <pubDate>Wed, 21 Jun 2017 21:13:14 -0500</pubDate>
      
      <guid>/post/dygraphtemplates/</guid>
      <description>library(dygraphs)Chart 1dygraph(nhtemp, main = &amp;quot;New Haven Temperatures&amp;quot;) %&amp;gt;% dySeries(label = &amp;quot;Temp (F)&amp;quot;, color = &amp;quot;black&amp;quot;) %&amp;gt;%dyShading(from = &amp;quot;1920-1-1&amp;quot;, to = &amp;quot;1930-1-1&amp;quot;, color = &amp;quot;#FFE6E6&amp;quot;) %&amp;gt;%dyShading(from = &amp;quot;1940-1-1&amp;quot;, to = &amp;quot;1950-1-1&amp;quot;, color = &amp;quot;#CCEBD6&amp;quot;){&#34;x&#34;:{&#34;attrs&#34;:{&#34;title&#34;:&#34;New Haven Temperatures&#34;,&#34;labels&#34;:[&#34;year&#34;,&#34;Temp (F)&#34;],&#34;legend&#34;:&#34;auto&#34;,&#34;retainDateWindow&#34;:false,&#34;axes&#34;:{&#34;x&#34;:{&#34;pixelsPerLabel&#34;:60}},&#34;series&#34;:{&#34;Temp (F)&#34;:{&#34;axis&#34;:&#34;y&#34;}},&#34;colors&#34;:[&#34;black&#34;]},&#34;scale&#34;:&#34;yearly&#34;,&#34;annotations&#34;:[],&#34;shadings&#34;:[{&#34;from&#34;:&#34;1920-01-01T00:00:00.000Z&#34;,&#34;to&#34;:&#34;1930-01-01T00:00:00.000Z&#34;,&#34;color&#34;:&#34;#FFE6E6&#34;,&#34;axis&#34;:&#34;x&#34;},{&#34;from&#34;:&#34;1940-01-01T00:00:00.000Z&#34;,&#34;to&#34;:&#34;1950-01-01T00:00:00.000Z&#34;,&#34;color&#34;:&#34;#CCEBD6&#34;,&#34;axis&#34;:&#34;x&#34;}],&#34;events&#34;:[],&#34;format&#34;:&#34;date&#34;,&#34;data&#34;:[[&#34;1912-01-01T00:00:00.000Z&#34;,&#34;1913-01-01T00:00:00.000Z&#34;,&#34;1914-01-01T00:00:00.000Z&#34;,&#34;1915-01-01T00:00:00.000Z&#34;,&#34;1916-01-01T00:00:00.000Z&#34;,&#34;1917-01-01T00:00:00.000Z&#34;,&#34;1918-01-01T00:00:00.000Z&#34;,&#34;1919-01-01T00:00:00.000Z&#34;,&#34;1920-01-01T00:00:00.000Z&#34;,&#34;1921-01-01T00:00:00.000Z&#34;,&#34;1922-01-01T00:00:00.000Z&#34;,&#34;1923-01-01T00:00:00.000Z&#34;,&#34;1924-01-01T00:00:00.000Z&#34;,&#34;1925-01-01T00:00:00.000Z&#34;,&#34;1926-01-01T00:00:00.000Z&#34;,&#34;1927-01-01T00:00:00.000Z&#34;,&#34;1928-01-01T00:00:00.000Z&#34;,&#34;1929-01-01T00:00:00.000Z&#34;,&#34;1930-01-01T00:00:00.000Z&#34;,&#34;1931-01-01T00:00:00.000Z&#34;,&#34;1932-01-01T00:00:00.000Z&#34;,&#34;1933-01-01T00:00:00.000Z&#34;,&#34;1934-01-01T00:00:00.000Z&#34;,&#34;1935-01-01T00:00:00.000Z&#34;,&#34;1936-01-01T00:00:00.000Z&#34;,&#34;1937-01-01T00:00:00.000Z&#34;,&#34;1938-01-01T00:00:00.000Z&#34;,&#34;1939-01-01T00:00:00.000Z&#34;,&#34;1940-01-01T00:00:00.000Z&#34;,&#34;1941-01-01T00:00:00.000Z&#34;,&#34;1942-01-01T00:00:00.000Z&#34;,&#34;1943-01-01T00:00:00.000Z&#34;,&#34;1944-01-01T00:00:00.000Z&#34;,&#34;1945-01-01T00:00:00.000Z&#34;,&#34;1946-01-01T00:00:00.000Z&#34;,&#34;1947-01-01T00:00:00.000Z&#34;,&#34;1948-01-01T00:00:00.000Z&#34;,&#34;1949-01-01T00:00:00.000Z&#34;,&#34;1950-01-01T00:00:00.000Z&#34;,&#34;1951-01-01T00:00:00.000Z&#34;,&#34;1952-01-01T00:00:00.000Z&#34;,&#34;1953-01-01T00:00:00.000Z&#34;,&#34;1954-01-01T00:00:00.000Z&#34;,&#34;1955-01-01T00:00:00.000Z&#34;,&#34;1956-01-01T00:00:00.000Z&#34;,&#34;1957-01-01T00:00:00.000Z&#34;,&#34;1958-01-01T00:00:00.000Z&#34;,&#34;1959-01-01T00:00:00.000Z&#34;,&#34;1960-01-01T00:00:00.000Z&#34;,&#34;1961-01-01T00:00:00.000Z&#34;,&#34;1962-01-01T00:00:00.000Z&#34;,&#34;1963-01-01T00:00:00.000Z&#34;,&#34;1964-01-01T00:00:00.000Z&#34;,&#34;1965-01-01T00:00:00.000Z&#34;,&#34;1966-01-01T00:00:00.000Z&#34;,&#34;1967-01-01T00:00:00.000Z&#34;,&#34;1968-01-01T00:00:00.000Z&#34;,&#34;1969-01-01T00:00:00.000Z&#34;,&#34;1970-01-01T00:00:00.000Z&#34;,&#34;1971-01-01T00:00:00.000Z&#34;],[49.9,52.3,49.4,51.1,49.4,47.9,49.8,50.9,49.3,51.9,50.8,49.6,49.3,50.6,48.4,50.7,50.9,50.6,51.5,52.8,51.8,51.1,49.8,50.2,50.4,51.6,51.8,50.9,48.8,51.7,51,50.6,51.7,51.5,52.1,51.3,51,54,51.4,52.7,53.1,54.6,52,52,50.9,52.6,50.2,52.6,51.6,51.9,50.5,50.9,51.7,51.4,51.7,50.8,51.9,51.8,51.9,53]]},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}Chart 2library(quantmod)data = getSymbols(&amp;quot;MSFT&amp;quot;, from = &amp;quot;2014-06-01&amp;quot;, auto.assign=F)ret = ROC(data[,6])mn = mean(ret, na.rm = TRUE)std = sd(ret, na.</description>
    </item>
    
  </channel>
</rss>